{"version":3,"sources":["App.js","index.js"],"names":["App","useState","lang","setLang","outputText","setOutputText","input","useRef","out","templateReversed","Object","fromEntries","entries","template","map","key","translate","current","value","replace","i","useEffect","ref","rows","cols","name","onChange","placeholder","className","type","onClick","navigator","clipboard","writeText","defaultValue","readOnly","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiEeA,EA9DH,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEgBF,mBAAS,IAFzB,mBAEbG,EAFa,KAEDC,EAFC,KAIVC,EAAQC,mBACZC,EAAMD,mBAEFE,EAAmBC,OAAOC,YAC9BD,OAAOE,QAAQC,GAAUC,KAAI,mCAAEC,EAAF,WAAgB,CAAhB,KAAsBA,OAG/CC,EAAY,WAChBX,EACEC,EAAMW,QAAQC,MAAMC,QAAQ,MAAM,SAACC,GAAD,OAChClB,EAAOO,EAAiBW,IAAM,GAAKP,EAASO,IAAM,QAKxDC,qBAAU,kBAAML,MAAa,CAACd,IAa9B,OACE,qCACE,iCACE,0BACEoB,IAAKhB,EACLiB,KAAK,IACLC,KAAK,KACLC,KAAK,UACLC,SAAUV,EACVW,YAAY,4JACZC,UAAU,mBACZ,wBAAQH,KAAK,SAASG,UAAU,aAAaC,KAAK,SAASC,QAtB7C,WAClB3B,GAASD,IAqBL,SACGA,EAAO,KAAO,UAGnB,0BACEoB,IAAKd,EACLe,KAAK,IACLC,KAAK,KACLM,QA1BW,WACX1B,IACF2B,UAAUC,UAAUC,UAAU7B,GAC9BI,EAAIS,QAAQiB,aAAe,gLAwBzBN,UAAU,SACVD,YAAY,kjCAGZO,aAAc9B,EACd+B,UAAQ,QCvDhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.07af4a57.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport template from './template.json';\n\nconst App = () => {\n  const [lang, setLang] = useState(false),\n    [outputText, setOutputText] = useState('');\n\n  const input = useRef(),\n    out = useRef();\n\n  const templateReversed = Object.fromEntries(\n    Object.entries(template).map(([key, val]) => [val, key]),\n  );\n\n  const translate = () => {\n    setOutputText(\n      input.current.value.replace(/./g, (i) =>\n        lang ? templateReversed[i] || '' : template[i] || '',\n      ),\n    );\n  };\n\n  useEffect(() => translate(), [lang]);\n\n  const setLanguage = () => {\n    setLang(!lang);\n  };\n\n  const copyText = () => {\n    if (outputText) {\n      navigator.clipboard.writeText(outputText);\n      out.current.defaultValue = '< Текст скопирован в буфер обмена. >';\n    }\n  };\n\n  return (\n    <>\n      <form>\n        <textarea\n          ref={input}\n          rows=\"4\"\n          cols=\"50\"\n          name=\"subject\"\n          onChange={translate}\n          placeholder=\"Введите или скопируйте текст\"\n          className=\"message string\"></textarea>\n        <button name=\"submit\" className=\"btn toggle\" type=\"button\" onClick={setLanguage}>\n          {lang ? 'RU' : 'EN'}\n        </button>\n      </form>\n      <textarea\n        ref={out}\n        rows=\"4\"\n        cols=\"50\"\n        onClick={copyText}\n        className=\"result\"\n        placeholder=\"Online перевод раскладки:\nНабрали текст, а раскладку клавиатуры не переключили? Не беда! Вам поможет исправление раскладки онлайн (английский - русский).\nНе забудте выбрать правильный язык кнопкой-переключателем!!!\"\n        defaultValue={outputText}\n        readOnly></textarea>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}